{"version":3,"file":"index-b9cefe9f.js","sources":["../../src/components/forms/MultiSelectCrud/MultiSelectCrud.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Modal } from \"./../Modal\";\n\nimport { ColumnDefinition } from \"../../../types\";\nimport { MultiSelectCrudTable } from \"../MultiSelectCrudTable\";\n\nexport type Props = {\n  sentKeyAs?: string;\n  primaryKey: string;\n  primaryKeyId: string;\n  sentPrimaryKeyIdAs?: string;\n  crudUrl: string;\n  getDataUrl: string;\n  lazyLoad?: boolean;\n  columns: Array<ColumnDefinition<any>>;\n  onExitModal?: () => void;\n  title?: string;\n  show: boolean;\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const MultiSelectCrud: React.FC<Props> = (props) => {\n  const {\n    sentKeyAs,\n    primaryKey,\n    primaryKeyId,\n    sentPrimaryKeyIdAs,\n    crudUrl,\n    columns,\n    onExitModal,\n    getDataUrl,\n    lazyLoad,\n    title,\n    show,\n    setShow,\n  } = props;\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const body = (\n    <>\n      <MultiSelectCrudTable\n        columns={columns}\n        crudUrl={crudUrl}\n        getDataUrl={getDataUrl}\n        primaryKey={primaryKey}\n        sentKeyAs={sentKeyAs}\n        primaryKeyId={primaryKeyId}\n        sentPrimaryKeyIdAs={sentPrimaryKeyIdAs}\n        lazyLoad={lazyLoad}\n        handleIsLoading={setIsLoading}\n      />\n    </>\n  );\n\n  const onExited = () => {\n    if (onExitModal && {}.toString.call(onExitModal) === \"[object Function]\") {\n      onExitModal();\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        show={show}\n        setShow={setShow}\n        title={title}\n        body={body}\n        isLoading={isLoading}\n        onExited={onExited}\n      />\n    </>\n  );\n};\n"],"names":["MultiSelectCrud","props","sentKeyAs","primaryKey","primaryKeyId","sentPrimaryKeyIdAs","crudUrl","columns","onExitModal","getDataUrl","lazyLoad","title","show","setShow","isLoading","setIsLoading","useState","body","jsx","Fragment","MultiSelectCrudTable","onExited","Modal"],"mappings":"wKAqBO,MAAAA,EAAAC,GAAA,CACL,KAAA,CAAM,UAAAC,EACJ,WAAAC,EACA,aAAAC,EACA,mBAAAC,EACA,QAAAC,EACA,QAAAC,EACA,YAAAC,EACA,WAAAC,EACA,SAAAC,EACA,MAAAC,EACA,KAAAC,EACA,QAAAC,CACA,EAAAZ,EAGF,CAAAa,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAAC,EAAA,IAAAC,WAAA,CAAA,SAAAD,EAAA,IAEIE,EAAC,CAAA,QAAAb,EACC,QAAAD,EACA,WAAAG,EACA,WAAAN,EACA,UAAAD,EACA,aAAAE,EACA,mBAAAC,EACA,SAAAK,EACA,gBAAAK,CACiB,CAAA,CAAA,CAAA,EAKvBM,EAAA,IAAA,CACEb,GAAA,CAAA,EAAA,SAAA,KAAAA,CAAA,IAAA,qBACEA,GACF,EAGF,OAAAU,MAAAC,EAAAA,SAAA,CAAA,SAAAD,EAAA,IAEII,EAAC,CAAA,KAAAV,EACC,QAAAC,EACA,MAAAF,EACA,KAAAM,EACA,UAAAH,EACA,SAAAO,CACA,CAAA,CAAA,CAAA,CAIR"}