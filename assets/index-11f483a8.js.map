{"version":3,"file":"index-11f483a8.js","sources":["../../src/types/index.ts"],"sourcesContent":["import React from 'react';\nimport { CellContext, ColumnDef } from '@tanstack/react-table';\n\nexport type MultiSelectOptionsColumns<TData, TValue = unknown> = {\n  columns: Array<ColumnDefinition<TData, TValue>>;\n  url: string;\n  title?: string;\n  getDataUrl: string;\n  lazyLoad?: boolean;\n  primaryKey: keyof TData;\n  sentKeyAs?: string,\n  onExitModalRefresh?: boolean;\n  onExitModal?: () => void;\n};\n\ntype ExtendStandardFields = {\n  fieldType?:\n  | FieldTypes.CHECKBOX\n  | FieldTypes.DATE\n  | FieldTypes.NUMBER\n  | FieldTypes.PASSWORD\n  | FieldTypes.TEXTAREA\n  | FieldTypes.HTML;\n  dropdown?: never;\n  multiSelectOptions?: never;\n  selectOptionsUrl?: never;\n  data?: string | number\n};\n\ntype ExtendTextField = {\n  fieldType?: FieldTypes.TEXT | FieldTypes.PASSWORD;\n  dropdown?: boolean;\n  multiSelectOptions?: never;\n  selectOptionsUrl?: never;\n  data?: string | number\n};\n\ntype ExtendMultiSelectField = {\n  fieldType?: FieldTypes.MULTISELECT;\n  dropdown?: never;\n  multiSelectOptions: MultiSelectOptionsColumns<any, any>;\n  selectOptionsUrl?: never;\n  data?: Array<string> | Array<number>\n};\n\ntype ExtendSelectField = {\n  dropdown?: never;\n  fieldType?: FieldTypes.SELECT;\n  selectOptionsUrl: string;\n  multiSelectOptions?: never;\n  data?: string | number\n};\n\nexport type ColumnDefinition<TData, TValue = unknown> = ColumnDef<\n  TData,\n  TValue\n> & {\n  accessorKey?: Extract<keyof TData, string>;\n  editable?: boolean;\n  selectOptionsUrl?: string;\n  titleOnCRUD?: string;\n  visible?: boolean;\n  getCellStyle?: (cell: CellContext<TData, TValue>) => React.CSSProperties;\n  getCellClass?: (cell: CellContext<TData, TValue>) => string;\n} & (\n    | ExtendStandardFields\n    | ExtendMultiSelectField\n    | ExtendSelectField\n    | ExtendTextField\n  );\n\nexport type SelectOption = {\n  value: string;\n  name: string;\n};\n\nexport type Variant =\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'info'\n  | 'danger'\n  | 'warning';\n\nexport enum FieldTypes {\n  TEXT = 'text',\n  NUMBER = 'number',\n  DATE = 'date',\n  TEXTAREA = 'textarea',\n  HTML = 'html',\n  PASSWORD = 'password',\n  CHECKBOX = 'checkbox',\n  SELECT = 'select',\n  MULTISELECT = 'multiselect',\n}\n\nexport type CrudType = \"CREATE\" | \"UPDATE\" | \"DELETE\";\n\nexport type DataField = {\n  value: string;\n  name: string;\n} & Record<string, any>;\n\nexport type InputFilter = Record<string, unknown>\n\nexport type ModalDataToSend = Record<\n  string,\n  string | number | Array<string> | Array<number>\n>"],"names":["FieldTypes"],"mappings":"AAoFY,IAAAA,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,OAAS,SACTA,EAAA,KAAO,OACPA,EAAA,SAAW,WACXA,EAAA,KAAO,OACPA,EAAA,SAAW,WACXA,EAAA,SAAW,WACXA,EAAA,OAAS,SACTA,EAAA,YAAc,cATJA,IAAAA,GAAA,CAAA,CAAA"}