import{a as y}from"./axios-94372f69.js";import{M as b,g as i,a as p,f,u as D}from"./index-1edb519e.js";import"./i18n-28032080.js";import{m as g}from"./matchStrings-5a558dd8.js";import"./_commonjsHelpers-de833af9.js";import"./i18nInstance-1f8a4d28.js";const A=(o,u)=>{let s=!0,e=!0;return Object.entries(u).every(t=>{const r=t[0],a=t[1];return r==="globalFilter"&&typeof a=="string"?(x(o,a)?e=!0:e=!1,!0):typeof o[r]>"u"?!0:typeof a=="string"&&!g(o[r],a)||Array.isArray(a)&&!isNaN(a[0])&&o[r]<a[0]||Array.isArray(a)&&!isNaN(a[1])&&o[r]>a[1]?(s=!1,!1):!0}),e&&s},x=(o,u)=>{if(u==="")return!0;let s=!1;return Object.entries(o).every(e=>g(e[1],u)?(s=!0,!1):!0),s},O=(o,u)=>{const s=new b(o,{onNoMatch:"passthrough",delayResponse:(u==null?void 0:u.timetou)??600});return s.onGet("/api/crud").reply(e=>(console.log("Axios request: '/api/crud' GET"),console.log(e),new Promise(function(t){const a=i().filter(n=>!e.params||Object.keys(e.params).length===0?!0:A(n,e.params));t([200,{success:!0,data:a}])}))),s.onPost("/api/crud").reply(e=>{console.log("Axios request: '/api/crud' POST");const t=JSON.parse(e.data),r=i(),n=p().find(l=>l.value===t.category_id);return t.category=(n==null?void 0:n.name)??"",t.uuid=f.string.uuid(),t.ean=f.datatype.number({min:8e6,max:9e6}),t.created_at=new Date,r.push(t),c(e,"Data inserted correctly")}),s.onPut("/api/crud").reply(e=>{console.log("Axios request: '/api/crud' PUT");const t=JSON.parse(e.data);console.log({updateData:t});const r=JSON.parse(e.data).uuid,a=i(),n=a.findIndex(l=>l.uuid===r);if(n>=0){const d=p().find(m=>m.value===t.category_id);t.category=(d==null?void 0:d.name)??"",a[n]={...a[n],...t}}return t(a),c(e,"Data updated correctly")}),s.onDelete("/api/crud").reply(e=>{console.log("Axios request: '/api/crud' DELETE"),console.log(JSON.parse(e.data));const t=JSON.parse(e.data).uuid,r=i(),a=r.findIndex(n=>n.uuid===t);return a>=0&&r.splice(a,1),D(r),c(e,"Data deleted correctly")}),s.onGet("/api/get_options").reply(e=>new Promise(function(t){const r=p();console.log("Axios request: '/api/get_options' GET",{data:r}),t([200,{success:!0,data:r}])})),s.onGet("/api/sub_table").reply(e=>new Promise(function(t){const r=i().splice(0,5);console.log("Axios request: '/api/sub_table' GET",{params:e.params,data:r}),t([200,{success:!0,data:r}])})),s.onPost("/api/sub_table").reply(e=>(console.log("Axios request: '/api/sub_table' POST"),console.log(JSON.parse(e.data)),c(e,"Added to table"))),s.onDelete("/api/sub_table").reply(e=>(console.log("Axios request: '/api/sub_table' DELETE"),console.log(JSON.parse(e.data)),c(e,"Deleted from table"))),s},c=(o,u)=>new Promise(s=>{s([200,{success:!0,message:u,data:o.data}])});O(y);const E={parameters:{actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}}};export{E as default};
//# sourceMappingURL=preview-3689251f.js.map
