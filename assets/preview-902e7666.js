import{a as y}from"./axios-94372f69.js";import{M as b,g as u,a as p,f,u as D}from"./index-3c2a34dd.js";import"./i18n-2050a10d.js";import{m as g}from"./matchStrings-5a558dd8.js";import"./_commonjsHelpers-de833af9.js";import"./i18nInstance-1f8a4d28.js";const x=(c,n)=>n.every(r=>{const{filter:e,text:a}=r,t=a,s=e,o=c[s];return s==="globalFilter"?A(c,t):typeof o>"u"?!1:typeof t=="string"?g(o,t):!(Array.isArray(t)&&!isNaN(t[0])&&o<t[0]||Array.isArray(t)&&!isNaN(t[1])&&o>t[1])}),A=(c,n)=>{if(n==="")return!0;let r=!1;return Object.entries(c).every(e=>g(e[1],n)?(r=!0,!1):!0),r},N=(c,n)=>{const r=new b(c,{onNoMatch:"passthrough",delayResponse:(n==null?void 0:n.timetou)??600});return r.onGet("/api/crud").reply(e=>(console.log("Axios request: '/api/crud' GET"),console.log({request:e}),new Promise(function(a){const s=u().filter(o=>!e.params||e.params.length===0?!0:x(o,e.params));console.log({filteredData:s}),a([200,{success:!0,data:s}])}))),r.onPost("/api/crud").reply(e=>{console.log("Axios request: '/api/crud' POST");const a=JSON.parse(e.data),t=u(),o=p().find(l=>l.value===a.category_id);return a.category=(o==null?void 0:o.name)??"",a.uuid=f.string.uuid(),a.ean=f.datatype.number({min:8e6,max:9e6}),a.created_at=new Date,t.push(a),i(e,"Data inserted correctly")}),r.onPut("/api/crud").reply(e=>{console.log("Axios request: '/api/crud' PUT");const a=JSON.parse(e.data);console.log({updateData:a});const t=JSON.parse(e.data).uuid,s=u(),o=s.findIndex(l=>l.uuid===t);if(o>=0){const d=p().find(m=>m.value===a.category_id);a.category=(d==null?void 0:d.name)??"",s[o]={...s[o],...a}}return a(s),i(e,"Data updated correctly")}),r.onDelete("/api/crud").reply(e=>{console.log("Axios request: '/api/crud' DELETE"),console.log(JSON.parse(e.data));const a=JSON.parse(e.data).uuid,t=u(),s=t.findIndex(o=>o.uuid===a);return s>=0&&t.splice(s,1),D(t),i(e,"Data deleted correctly")}),r.onGet("/api/get_options").reply(e=>new Promise(function(a){const t=p();console.log("Axios request: '/api/get_options' GET",{data:t}),a([200,{success:!0,data:t}])})),r.onGet("/api/sub_table").reply(e=>new Promise(function(a){const t=u().splice(0,5);console.log("Axios request: '/api/sub_table' GET",{params:e.params,data:t}),a([200,{success:!0,data:t}])})),r.onPost("/api/sub_table").reply(e=>(console.log("Axios request: '/api/sub_table' POST"),console.log(JSON.parse(e.data)),i(e,"Added to table"))),r.onDelete("/api/sub_table").reply(e=>(console.log("Axios request: '/api/sub_table' DELETE"),console.log(JSON.parse(e.data)),i(e,"Deleted from table"))),r},i=(c,n)=>new Promise(r=>{r([200,{success:!0,message:n,data:c.data}])});N(y);const h={parameters:{actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}}};export{h as default};
//# sourceMappingURL=preview-902e7666.js.map
